<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.5"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:py="clr-namespace:Bonsai.Scripting.Python;assembly=Bonsai.Scripting.Python"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:p1="clr-namespace:Bonsai.ML.NeuralDecoding;assembly=Bonsai.ML.NeuralDecoding"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:CreateRuntime">
          <py:PythonHome />
        </Combinator>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>ImportDecoderLibrary</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:Exec">
                <py:Script>import sys
import os
sys.path.append(os.getcwd())
from decoder import *</py:Script>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>LoadDecoder</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:GetRuntime" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:Exec">
                <py:Script>model = SortedSpikeDecoder.load()</py:Script>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>LoadData</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:GetRuntime" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:Exec">
                <py:Script>data = DataLoader.load_sorted_spike_data()</py:Script>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>IterateData</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Period" DisplayName="SamplingFrequency" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timer">
                <rx:DueTime>PT0S</rx:DueTime>
                <rx:Period>PT0.01S</rx:Period>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:GetRuntime" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:Exec">
                <py:Script>iterator = DataIterator(data)</py:Script>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:ObserveOnGIL" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:Eval">
                <py:Expression>iterator.next()</py:Expression>
              </Combinator>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>it[0]</scr:Expression>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>new(it[0] as Position, it[1] as Spikes, it[2] as Decoding, it[3] as PositionBins)</scr:Expression>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="4" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source2" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>Data</Name>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Performance</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:TimeInterval" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Interval.TotalMilliseconds</Selector>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>1000/it</scr:Expression>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:BufferCount">
                <rx:Count>10</rx:Count>
                <rx:Skip>1</rx:Skip>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Concat" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Average" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>RunDecoder</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Data</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Spikes</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:Set">
                <py:VariableName>spikes</py:VariableName>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="py:Eval">
                <py:Expression>model.decode(spikes)</py:Expression>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p1:Posterior">
                <p1:ArgMax>0</p1:ArgMax>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>OnlineDecoderResults</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Data</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position</Selector>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>it.ToString() == "nan" ? double.NaN : Convert.ToDouble(it.ToString())</scr:Expression>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>Position</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>VisualizeDecoder</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Position</Name>
            </Expression>
            <Expression xsi:type="VisualizerMapping" />
            <Expression xsi:type="SubscribeSubject">
              <Name>OnlineDecoderResults</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="2" To="4" Label="Source1" />
      <Edge From="3" To="4" Label="Source2" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>